survey.list = c('bis_bas')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
bis_bas_score = function(data){
bis_bas_attncheck <- data %>% filter(V1=='question_check') %>% pull(V2)=='Item 1'
#print(df_filtered)
df_filtered = data %>% filter(!grepl('TRQ', V1))  %>% filter(!(V1=='question_check'))%>% mutate(V2 = 5-as.numeric(sub('.*Item ','', V2))) %>%   mutate(V1 = paste0("question", 1:24))
bas_drive = df_filtered %>%  filter(V1 %in% c('question3','question9','question12','question21'))%>%
pull(V2) %>% sum
bas_fun_seeking = df_filtered %>%  filter(V1 %in% c('question5','question10','question15','question20'))%>%
pull(V2) %>% sum
bas_reward = df_filtered %>%  filter(V1 %in% c('question4','question7','question14','question18','question23'))%>%
pull(V2) %>% sum
bas_total = bas_drive + bas_fun_seeking + bas_reward
bis_score = df_filtered %>%  filter(V1 %in% c('question2','question8','question13','question16','question19','question22','question24'))%>%
mutate(V2 = ifelse(V1 %in% c('question2','question22'), 5-V2,V2)) %>%
pull(V2) %>% sum
return(data.frame(bis_bas_attncheck,bas_drive,bas_fun_seeking,bas_reward,bas_total,bis_score))
}
survey.list = c('bis_bas')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
survey.list = c('bis_bas')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
promis_emotion = function(data){
df_filtered = data %>% filter(!grepl('TRQ', V1))  %>% filter(!(V1=='question_check'))%>% mutate(V2 =as.numeric(sub('.*Item ','', V2)))
promis_emotion_score = df_filtered %>% pull(V2) %>% sum
return(data.frame)
}
survey.list = c('promis_emotion')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
promis_emotion = function(data){
df_filtered = data %>% filter(!grepl('TRQ', V1))  %>% filter(!(V1=='question_check'))%>% mutate(V2 =as.numeric(sub('.*Item ','', V2)))
promis_emotion_score = df_filtered %>% pull(V2) %>% sum
return(data.frame(promis_emotion_score))
}
survey.list = c('promis_emotion')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
promis_emotion = function(data){
df_filtered = data %>% filter(!grepl('TRQ', V1))  %>% filter(!(V1=='question_check'))%>% mutate(V2 =as.numeric(sub('.*Item ','', V2)))
promis_emotion_score = df_filtered %>% pull(V2) %>% sum
print(promis_emotion_score)
return(data.frame(promis_emotion_score))
}
survey.list = c('promis_emotion')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
promis_emotion = function(data){
df_filtered = data %>% filter(!grepl('TRQ', V1))  %>% filter(!(V1=='question_check'))%>% mutate(V2=as.numeric(sub('.*Item ','', V2)))
promis_emotion_score = df_filtered %>% pull(V2) %>% sum
print(promis_emotion_score)
return(data.frame(promis_emotion_score))
}
promis_emotion = function(data){
df_filtered = data %>% filter(!grepl('TRQ', V1))  %>% filter(!(V1=='question_check'))%>% mutate(V2=as.numeric(sub('.*Item ','', V2)))
promis_emotion_score = df_filtered %>% pull(V2) %>% sum
#print(promis_emotion_score)
return(data.frame(promis_emotion_score))
}
survey.list = c('promis_emotion')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
promis_emotion = function(data){
df_filtered = data %>% filter(!grepl('TRQ', V1)) %>% filter(!(V1=='question_check')) %>% mutate(V2=as.numeric(sub('.*Item ','', V2)))
promis_emotion_score = df_filtered %>% pull(V2) %>% sum
#print(promis_emotion_score)
return(data.frame(promis_emotion_score = promis_emotion_score))
}
survey.list = c('promis_emotion')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
promis_emotion_score = function(data){
df_filtered = data %>% filter(!grepl('TRQ', V1))  %>% filter(!(V1=='question_check'))%>% mutate(V2=as.numeric(sub('.*Item ','', V2)))
promis_emotion_score = df_filtered %>% pull(V2) %>% sum
#print(promis_emotion_score)
return(data.frame(promis_emotion_score))
}
survey.list = c('promis_emotion')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
promis_emotion_score = function(data){
promis_emotion_tscore = data %>% filter(V1=="tScore") %>% pull(V2)
df_filtered = data %>% filter(!grepl('TRQ', V1))  %>% filter(!(V1 %in% c('question_check', 'tScore')))%>% mutate(V2=as.numeric(sub('.*Item ','', V2)))
promis_emotion_score = df_filtered %>% pull(V2) %>% sum
#print(promis_emotion_score)
return(data.frame(promis_emotion_score))
}
survey.list = c('promis_emotion')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
promis_emotion_score = function(data){
promis_emotion_tscore = data %>% filter(V1=="tScore") %>% pull(V2)
df_filtered = data %>% filter(!grepl('TRQ', V1))  %>% filter(!(V1 %in% c('question_check', 'tScore')))%>% mutate(V2=as.numeric(sub('.*Item ','', V2)))
promis_emotion_raw = df_filtered %>% pull(V2) %>% sum
#print(promis_emotion_score)
return(data.frame(promis_emotion_raw, promis_emotion_tscore))
}
survey.list = c('promis_emotion')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
promis_meaning_score = function(data){
promis_meaning_tscore = data %>% filter(V1=="tScore") %>% pull(V2)
promis_meaning_attncheck = data %>% filter(V1=="question_check1") %>% pull(V2) == '4.0'
df_filtered = data %>% filter(!grepl('TRQ', V1))  %>% filter(!(V1 %in% c('question_check1', 'tScore')))%>% mutate(V2=as.numeric(sub('.*Item ','', V2)))
promis_emotion_raw = df_filtered %>% pull(V2) %>% sum
#print(promis_emotion_score)
return(data.frame(promis_meaning_tscore, promis_meaning_attncheck,promis_emotion_raw))
}
survey.list = c('promis_meaning')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
promis_meaning_score = function(data){
promis_meaning_tscore = data %>% filter(V1=="tScore") %>% pull(V2)
promis_meaning_attncheck = data %>% filter(V1=="question_check1") %>% pull(V2) == '4.0'
df_filtered = data %>% filter(!grepl('TRQ', V1))  %>% filter(!(V1 %in% c('question_check1', 'tScore')))%>% mutate(V2=as.numeric(sub('.*Item ','', V2)))
promis_meaning_raw = df_filtered %>% pull(V2) %>% sum
#print(promis_emotion_score)
return(data.frame(promis_meaning_tscore, promis_meaning_attncheck,promis_meaning_raw))
}
survey.list = c('promis_meaning')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
promis_meaning_score = function(data){
promis_meaning_tscore = data %>% filter(V1=="tScore") %>% pull(V2)
# promis_meaning_attncheck = data %>% filter(V1=="question_check1") %>% pull(V2) == '4.0'
# df_filtered = data %>% filter(!grepl('TRQ', V1))  %>% filter(!(V1 %in% c('question_check1', 'tScore')))%>% mutate(V2=as.numeric(sub('.*Item ','', V2)))
promis_meaning_attncheck = TRUE
promis_meaning_raw = df_filtered %>% pull(V2) %>% sum
#print(promis_emotion_score)
return(data.frame(promis_meaning_tscore, promis_meaning_attncheck,promis_meaning_raw))
}
survey.list = c('promis_meaning')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
promis_meaning_score = function(data){
promis_meaning_tscore = data %>% filter(V1=="tScore") %>% pull(V2)
# promis_meaning_attncheck = data %>% filter(V1=="question_check1") %>% pull(V2) == '4.0'
df_filtered = data %>% filter(!grepl('TRQ', V1))  %>% filter(!(V1 %in% c('question_check1', 'tScore')))%>% mutate(V2=as.numeric(sub('.*Item ','', V2)))
promis_meaning_attncheck = TRUE
promis_meaning_raw = df_filtered %>% pull(V2) %>% sum
#print(promis_emotion_score)
return(data.frame(promis_meaning_tscore, promis_meaning_attncheck,promis_meaning_raw))
}
survey.list = c('promis_meaning')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
promis_meaning_score = function(data){
promis_meaning_tscore = data %>% filter(V1=="tScore") %>% pull(V2)
if any(grepl('question_check1', data$V1)) {
promis_meaning_score = function(data){
promis_meaning_tscore = data %>% filter(V1=="tScore") %>% pull(V2)
if (any(grepl('question_check1', data$V1))) {
promis_meaning_attncheck = data %>% filter(V1=="question_check1") %>% pull(V2) == '4.0'
} else {
promis_meaning_attncheck = NA
}
df_filtered = data %>% filter(!grepl('TRQ', V1))  %>% filter(!(V1 %in% c('question_check1', 'tScore')))%>% mutate(V2=as.numeric(sub('.*Item ','', V2)))
promis_meaning_attncheck = TRUE
promis_meaning_raw = df_filtered %>% pull(V2) %>% sum
#print(promis_emotion_score)
return(data.frame(promis_meaning_tscore, promis_meaning_attncheck,promis_meaning_raw))
}
survey.list = c('promis_meaning')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
promis_self_efficacy_score = function(data){
promis_self_efficacy_tscore = data %>% filter(V1=="tScore") %>% pull(V2)
df_filtered = data %>% filter(!grepl('TRQ', V1))  %>% filter(!(V1 %in% c('question_check', 'tScore')))%>% mutate(V2=as.numeric(sub('.*Item ','', V2)))
promis_self_efficacy_raw = df_filtered %>% pull(V2) %>% sum
#print(promis_emotion_score)
return(data.frame(promis_self_efficacy_raw, promis_self_efficacy_tscore))
}
survey.list = c('promis_self_efficacy')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
promis_self_efficacy_manage_score = function(data){
promis_self_efficacy_manage_tscore = data %>% filter(V1=="tScore") %>% pull(V2)
df_filtered = data %>% filter(!grepl('TRQ', V1))  %>% filter(!(V1 %in% c('question_check', 'tScore')))%>% mutate(V2=as.numeric(sub('.*Item ','', V2)))
promis_self_efficacy_manage_raw = df_filtered %>% pull(V2) %>% sum
#print(promis_emotion_score)
return(data.frame(promis_self_efficacy_manage_raw, promis_self_efficacy_manage_tscore))
}
survey.list = c('promis_self_efficacy_manage')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
promis_sleep_score = function(data){
promis_sleep_tscore = data %>% filter(V1=="tScore") %>% pull(V2)
df_filtered = data %>% filter(!grepl('TRQ', V1))  %>% filter(!(V1 %in% c('question_check', 'tScore')))%>% mutate(V2=as.numeric(sub('.*Item ','', V2)))
promis_sleep_raw = df_filtered %>% pull(V2) %>% sum
#print(promis_emotion_score)
return(data.frame(promis_sleep_raw, promis_sleep_tscore))
}
survey.list = c('promis_sleep')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
promis_social_iso_score = function(data){
promis_social_iso_tscore = data %>% filter(V1=="tScore") %>% pull(V2)
df_filtered = data %>% filter(!grepl('TRQ', V1))  %>% filter(!(V1 %in% c('question_check', 'tScore')))%>% mutate(V2=as.numeric(sub('.*Item ','', V2)))
promis_social_iso_raw = df_filtered %>% pull(V2) %>% sum
#print(promis_emotion_score)
return(data.frame(promis_social_iso_raw, promis_social_iso_tscore))
}
survey.list = c('promis_social_iso')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
promis_social_sat_score = function(data){
ppromis_social_sat_tscore = data %>% filter(V1=="tScore") %>% pull(V2)
df_filtered = data %>% filter(!grepl('TRQ', V1))  %>% filter(!(V1 %in% c('question_check', 'tScore')))%>% mutate(V2=as.numeric(sub('.*Item ','', V2)))
promis_social_sat_raw = df_filtered %>% pull(V2) %>% sum
#print(promis_emotion_score)
return(data.frame(promis_social_sat_raw, ppromis_social_sat_tscore))
}
survey.list = c('promis_social_sat')
full.data <- data.frame(id=NA)
i=1
for(s in survey.list){
tryCatch(
{
full.data <- extract.survey(s) %>%
merge.scores(full.data, .) %>%
filter(!is.na(id))
print(glue('{100*round(i/length(survey.list),2)}% done'))
i=i+1
},
error=function(e){
print(glue('The following problem occurred within the {s} function:\n {e}'))
}
)
}
